{"version":3,"sources":["components/post.tsx","App.tsx","index.tsx"],"names":["Post","props","todo","draggableId","id","index","provided","ref","innerRef","draggableProps","dragHandleProps","className","theme","onClick","setStatus","status","text","src","alt","e","removePost","App","useState","isLoaded","setIsLoaded","input","setInput","todos","setTodos","setTheme","document","body","style","backgroundColor","color","statusToShow","setStatusToShow","useEffect","todosFromLocalStorage","window","localStorage","getItem","parsedTodos","JSON","parse","setItem","stringify","type","value","placeholder","onKeyDown","key","Date","toISOString","currentTarget","handleSubmit","onChange","onDragEnd","result","destination","items","Array","from","splice","source","reorderedItem","droppableId","droppableProps","filter","map","postId","item","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.657dd56e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nexport type Todo={id:string,text:string,status:'active' | 'completed'}\r\n\r\n\r\nfunction Post(props:{index:number, theme:string, todo:Todo, removePost:(postId:string )=> void, setStatus:( postId:string, status:Todo['status']) => void }) \r\n{\r\n    const { todo } = props;\r\n\r\n    return (\r\n        <>\r\n        <Draggable key={todo.id} draggableId={todo.id} index={props.index}>\r\n                {(provided) => (\r\n                    <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                    <div className={`post ${props.theme}`} onClick={()=> props.setStatus(todo.id, todo.status === \"active\" ? \"completed\" : \"active\")}>\r\n                        <div className={`button-${todo.status}`} onClick={()=> props.setStatus(todo.id, todo.status === \"active\" ? \"completed\" : \"active\")}>\r\n                            <div className={`circle-${todo.status} ${props.theme}`}></div>\r\n                        </div>\r\n\r\n                        <h3 id={todo.status} className={`${props.theme}`}>{todo.text}</h3>\r\n                        <img id=\"cross\" src=\"/images/icon-cross.svg\" alt=\"\" onClick={(e) => props.removePost(todo.id) } />\r\n\r\n                        </div>\r\n                        \r\n                        \r\n                        \r\n                    </div>\r\n                )}\r\n                \r\n        </Draggable>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport Post, { Todo } from './components/post';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\n\r\n\r\nfunction App() {\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n  const [todos, setTodos] = useState([] as Todo[]);\r\n  const [theme, setTheme] = useState(\"dark\")\r\n  \r\n\r\n  if (theme === \"light\") {\r\n    document.body.style.backgroundColor = \"hsl(236, 33%, 92%)\";\r\n    document.body.style.color = \"hsl(236, 9%, 61%)\";\r\n  } else {\r\n    document.body.style.backgroundColor = \"hsl(235, 21%, 11%)\";\r\n    document.body.style.color = \"hsl(233, 14%, 35%)\";\r\n  }\r\n\r\n  const [statusToShow, setStatusToShow] = useState(\"all\" as 'all' | \"active\" | 'completed')\r\n\r\n  useEffect(() => {\r\n    if (!isLoaded) {\r\n      setIsLoaded(true);\r\n      const todosFromLocalStorage = window.localStorage.getItem('todos');\r\n      if (todosFromLocalStorage) {\r\n        const parsedTodos = JSON.parse(todosFromLocalStorage) as Todo[];\r\n        setTodos(parsedTodos);\r\n      }\r\n    }\r\n\r\n    window.localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n\r\n  }, [todos])\r\n\r\n  const handleSubmit = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n    setTodos([...todos, { id: `${(new Date()).toISOString()}`, text: e.currentTarget.value, status: \"active\" }]);\r\n    setInput(\"\");\r\n  }\r\n\r\n\r\n  const handleOnDragEnd = (result: any) => {\r\n    if (!result.destination) return;\r\n    \r\n    const items = Array.from(todos);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n    setTodos(items);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={`header ${theme}`}>\r\n        <h1>T O D O</h1>\r\n        <img id=\"theme\" src={theme === \"light\" ? \"/images/icon-moon.svg\" : \"/images/icon-sun.svg\"} alt=\"\" onClick={() => theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\")} />\r\n        <div className={`input ${theme}`}>\r\n          <div className=\"button\"></div>\r\n\r\n          <input type=\"text\" value={input} placeholder=\"Create a new todo...\" onKeyDown={(e) => e.key === 'Enter' && handleSubmit(e)} onChange={(e) => setInput(e.currentTarget.value)} className={`${theme}`} />\r\n\r\n        </div>\r\n\r\n\r\n\r\n      </div>\r\n\r\n      <div className={`container ${theme}`}>\r\n\r\n        <DragDropContext onDragEnd={handleOnDragEnd}>\r\n          \r\n          <Droppable droppableId=\"list\">\r\n\r\n            {(provided) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n              >\r\n\r\n            {todos.filter(todo => {\r\n              if (statusToShow === \"all\") { return true }\r\n              return todo.status === statusToShow\r\n\r\n            }).map((todo, index) => (\r\n\r\n              <Post index={index} theme={theme} todo={todo} key={todo.id} removePost={postId => setTodos(todos.filter(item => item.id !== postId))}\r\n                setStatus={(postId, status) => {\r\n                  setTodos(todos.map(item => {\r\n                    if (item.id === postId) { return ({ ...item, status: status }) }\r\n                    return item\r\n                  }))\r\n                }} />\r\n            ))}\r\n            \r\n\r\n\r\n              {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n\r\n           \r\n            \r\n          \r\n        </DragDropContext>\r\n\r\n          <div className=\"footer\">\r\n            <p id=\"items\" >{todos.filter(todo => todo.status === 'active').length} items left </p>\r\n            <p onClick={() => setStatusToShow(\"all\")} style={{ color: statusToShow === 'all' ? 'hsl(220, 98%, 61%)' : 'hsl(234, 11%, 52%)' }} className={`${theme}`} id=\"all\">All</p>\r\n            <p onClick={() => setStatusToShow(\"active\")} style={{ color: statusToShow === 'active' ? 'hsl(220, 98%, 61%)' : 'hsl(234, 11%, 52%)' }} className={`${theme}`} id=\"activebar\">Active</p>\r\n            <p onClick={() => setStatusToShow(\"completed\")} style={{ color: statusToShow === 'completed' ? 'hsl(220, 98%, 61%)' : 'hsl(234, 11%, 52%)' }} className={`${theme}`} id=\"completedbar\">Completed</p>\r\n            <p onClick={() => { setTodos(todos.filter(todo => todo.status !== \"completed\")) }} className={`${theme}`}>Clear Completed</p>\r\n          </div>\r\n      </div>\r\n\r\n      <div className=\"foo\">\r\n        <div className={`ter ${theme}`}></div>\r\n      </div>\r\n\r\n    \r\n        <h4>Drag and drop to reorder list</h4>\r\n\r\n\r\n\r\n    </>\r\n      );\r\n}\r\n\r\n      export default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}